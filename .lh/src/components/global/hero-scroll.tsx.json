{
    "sourceFile": "src/components/global/hero-scroll.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1745633281879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745649302633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,6 +15,13 @@\n     useTransform(scrollYProgress, [0, 0.8], [0.05, 1.2]),\r\n     useTransform(scrollYProgress, [0, 0.8], [0, 1.2]),\r\n   ];\r\n \r\n-  return <GoogleGeminiEffect pathLengths={pathLengths} />;\r\n+  return (\r\n+    <div\r\n+      ref={ref}\r\n+      className=\"relative w-full h-[100vh] z-10 flex items-center justify-center\"\r\n+    >\r\n+      <GoogleGeminiEffect pathLengths={pathLengths} />\r\n+    </div>\r\n+  );\r\n }\r\n"
                },
                {
                    "date": 1745649358612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,24 +4,10 @@\n import { useScroll, useTransform } from 'framer-motion';\r\n import { GoogleGeminiEffect } from '@/components/global/google-gemini-effect';\r\n \r\n export default function HeroScroll() {\r\n-  const ref = React.useRef(null);\r\n-  const scrollYProgress = useScroll({ target: ref, offset: ['start start', 'end start'] }).scrollYProgress;\r\n-\r\n-  const pathLengths = [\r\n-    useTransform(scrollYProgress, [0, 0.8], [0.2, 1.2]),\r\n-    useTransform(scrollYProgress, [0, 0.8], [0.15, 1.2]),\r\n-    useTransform(scrollYProgress, [0, 0.8], [0.1, 1.2]),\r\n-    useTransform(scrollYProgress, [0, 0.8], [0.05, 1.2]),\r\n-    useTransform(scrollYProgress, [0, 0.8], [0, 1.2]),\r\n-  ];\r\n-\r\n   return (\r\n-    <div\r\n-      ref={ref}\r\n-      className=\"relative w-full h-[100vh] z-10 flex items-center justify-center\"\r\n-    >\r\n-      <GoogleGeminiEffect pathLengths={pathLengths} />\r\n+    <div className=\"w-full h-[100vh] bg-yellow-500 z-50 flex items-center justify-center\">\r\n+      <h1 className=\"text-black text-4xl\">Hero Scroll Here</h1>\r\n     </div>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745649548973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,24 @@\n import { useScroll, useTransform } from 'framer-motion';\r\n import { GoogleGeminiEffect } from '@/components/global/google-gemini-effect';\r\n \r\n export default function HeroScroll() {\r\n+  const ref = React.useRef(null);\r\n+  const scrollYProgress = useScroll({ target: ref, offset: ['start start', 'end start'] }).scrollYProgress;\r\n+\r\n+  const pathLengths = [\r\n+    useTransform(scrollYProgress, [0, 0.8], [0.2, 1.2]),\r\n+    useTransform(scrollYProgress, [0, 0.8], [0.15, 1.2]),\r\n\\ No newline at end of file\n+    useTransform(scrollYProgress, [0, 0.8], [0.1, 1.2]),\r\n+    useTransform(scrollYProgress, [0, 0.8], [0.05, 1.2]),\r\n+    useTransform(scrollYProgress, [0, 0.8], [0, 1.2]),\r\n+  ];\r\n+\r\n   return (\r\n-    <div className=\"w-full h-[100vh] bg-yellow-500 z-50 flex items-center justify-center\">\r\n-      <h1 className=\"text-black text-4xl\">Hero Scroll Here</h1>\r\n+    <div\r\n+      ref={ref}\r\n+      className=\"relative w-full h-[100vh] z-10 flex items-center justify-center\"\r\n+    >\r\n+      <GoogleGeminiEffect pathLengths={pathLengths} />\r\n     </div>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1745650309268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n 'use client';\r\n \r\n-import React from 'react';\r\n+import React, { useRef } from 'react';\r\n import { useScroll, useTransform } from 'framer-motion';\r\n-import { GoogleGeminiEffect } from '@/components/global/google-gemini-effect';\r\n+import { GoogleGeminiEffect } from './google-gemini-effect';\r\n \r\n export default function HeroScroll() {\r\n-  const ref = React.useRef(null);\r\n-  const scrollYProgress = useScroll({ target: ref, offset: ['start start', 'end start'] }).scrollYProgress;\r\n+  const ref = useRef(null);\r\n \r\n+  const { scrollYProgress } = useScroll({ target: ref, offset: ['start start', 'end start'] });\r\n+\r\n   const pathLengths = [\r\n     useTransform(scrollYProgress, [0, 0.8], [0.2, 1.2]),\r\n     useTransform(scrollYProgress, [0, 0.8], [0.15, 1.2]),\r\n     useTransform(scrollYProgress, [0, 0.8], [0.1, 1.2]),\r\n@@ -18,10 +19,17 @@\n \r\n   return (\r\n     <div\r\n       ref={ref}\r\n-      className=\"relative w-full h-[100vh] z-10 flex items-center justify-center\"\r\n+      className=\"pointer-events-none\"\r\n+      style={{\r\n+        position: 'fixed',\r\n+        top: '50%',\r\n+        left: '50%',\r\n\\ No newline at end of file\n+        transform: 'translate(-50%, -50%)',\r\n+        zIndex: 0,\r\n+      }}\r\n     >\r\n       <GoogleGeminiEffect pathLengths={pathLengths} />\r\n     </div>\r\n   );\r\n-}\n+}\r\n"
                }
            ],
            "date": 1745633281879,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport React from 'react';\r\nimport { useScroll, useTransform } from 'framer-motion';\r\nimport { GoogleGeminiEffect } from '@/components/global/google-gemini-effect';\r\n\r\nexport default function HeroScroll() {\r\n  const ref = React.useRef(null);\r\n  const scrollYProgress = useScroll({ target: ref, offset: ['start start', 'end start'] }).scrollYProgress;\r\n\r\n  const pathLengths = [\r\n    useTransform(scrollYProgress, [0, 0.8], [0.2, 1.2]),\r\n    useTransform(scrollYProgress, [0, 0.8], [0.15, 1.2]),\r\n    useTransform(scrollYProgress, [0, 0.8], [0.1, 1.2]),\r\n    useTransform(scrollYProgress, [0, 0.8], [0.05, 1.2]),\r\n    useTransform(scrollYProgress, [0, 0.8], [0, 1.2]),\r\n  ];\r\n\r\n  return <GoogleGeminiEffect pathLengths={pathLengths} />;\r\n}\r\n"
        }
    ]
}