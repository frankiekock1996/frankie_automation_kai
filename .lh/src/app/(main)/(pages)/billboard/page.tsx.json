{
    "sourceFile": "src/app/(main)/(pages)/billboard/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1745750180987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745750761288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,159 +1,15 @@\n-'use client';\r\n-\r\n+import PostsTable from '@/components/posts/PostsTable';\r\n import BackButton from '@/components/ui/backbutton';\r\n-import * as z from 'zod';\r\n-import { useForm } from 'react-hook-form';\r\n-import { zodResolver } from '@hookform/resolvers/zod';\r\n-import {\r\n-  Form,\r\n-  FormControl,\r\n-  FormField,\r\n-  FormItem,\r\n-  FormLabel,\r\n-  FormMessage,\r\n-} from '@/components/ui/form';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Textarea } from '@/components/ui/textarea';\r\n-import { Button } from '@/components/ui/button';\r\n-import posts from '@/data/posts';\r\n-import { ToastAction } from \"@/components/ui/toast\"\r\n+import PostsPagination from '@/components/posts/PostsPagination';\r\n \r\n-const formSchema = z.object({\r\n-  title: z.string().min(1, {\r\n-    message: 'Title is required',\r\n-  }),\r\n-  body: z.string().min(1, {\r\n-    message: 'Body is required',\r\n-  }),\r\n-  author: z.string().min(1, {\r\n-    message: 'Author is required',\r\n-  }),\r\n-  date: z.string().min(1, {\r\n-    message: 'Date is required',\r\n-  }),\r\n-});\r\n-\r\n-interface PostEditPageProps {\r\n-  params: {\r\n-    id: string;\r\n-  };\r\n-}\r\n-\r\n-const PostEditPage = ({ params }: PostEditPageProps) => {\r\n-  const { toast } = useToast();\r\n-\r\n-  const post = posts.find((post) => post.id === params.id);\r\n-\r\n-  const form = useForm<z.infer<typeof formSchema>>({\r\n-    resolver: zodResolver(formSchema),\r\n-    defaultValues: {\r\n-      title: post?.title || '',\r\n-      body: post?.body || '',\r\n-      author: post?.author || '',\r\n-      date: post?.date || '',\r\n-    },\r\n-  });\r\n-\r\n-  const handleSubmit = (data: z.infer<typeof formSchema>) => {\r\n-    toast({\r\n-      title: 'Post has been updated successfully',\r\n-      description: `Updated by ${post?.author} on ${post?.date}`,\r\n-    });\r\n-  };\r\n-\r\n+const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Back To Posts' link='/posts' />\r\n-      <h3 className='text-2xl mb-4'>Edit Post</h3>\r\n-      <Form {...form}>\r\n-        <form onSubmit={form.handleSubmit(handleSubmit)} className='space-y-8'>\r\n-          <FormField\r\n-            control={form.control}\r\n-            name='title'\r\n-            render={({ field }) => (\r\n-              <FormItem>\r\n-                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n-                  Title\r\n-                </FormLabel>\r\n-                <FormControl>\r\n-                  <Input\r\n-                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n-                    placeholder='Enter Title'\r\n-                    {...field}\r\n-                  />\r\n-                </FormControl>\r\n-                <FormMessage />\r\n-              </FormItem>\r\n-            )}\r\n-          />\r\n-\r\n-          <FormField\r\n-            control={form.control}\r\n-            name='body'\r\n-            render={({ field }) => (\r\n-              <FormItem>\r\n-                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n-                  Body\r\n-                </FormLabel>\r\n-                <FormControl>\r\n-                  <Textarea\r\n-                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n-                    placeholder='Enter Body'\r\n-                    {...field}\r\n-                  />\r\n-                </FormControl>\r\n-                <FormMessage />\r\n-              </FormItem>\r\n-            )}\r\n-          />\r\n-\r\n-          <FormField\r\n-            control={form.control}\r\n-            name='author'\r\n-            render={({ field }) => (\r\n-              <FormItem>\r\n-                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n-                  Author\r\n-                </FormLabel>\r\n-                <FormControl>\r\n-                  <Input\r\n-                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n-                    placeholder='Enter Author'\r\n-                    {...field}\r\n-                  />\r\n-                </FormControl>\r\n-                <FormMessage />\r\n-              </FormItem>\r\n-            )}\r\n-          />\r\n-\r\n-          <FormField\r\n-            control={form.control}\r\n-            name='date'\r\n-            render={({ field }) => (\r\n-              <FormItem>\r\n-                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n-                  Date\r\n-                </FormLabel>\r\n-                <FormControl>\r\n-                  <Input\r\n-                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n-                    placeholder='Enter Date'\r\n-                    {...field}\r\n-                  />\r\n-                </FormControl>\r\n-                <FormMessage />\r\n-              </FormItem>\r\n-            )}\r\n-          />\r\n-\r\n-          <Button className='w-full dark:bg-slate-800 dark:text-white'>\r\n-            Update Post\r\n-          </Button>\r\n-        </form>\r\n-      </Form>\r\n+      <BackButton text='Go Back' link='/' />\r\n+      <PostsTable />\r\n\\ No newline at end of file\n+      <PostsPagination />\r\n     </>\r\n   );\r\n };\r\n \r\n-export default PostEditPage;\n+export default PostsPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745751157483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Go Back' link='/' />\r\n+      <BackButton text='Go Back' link='/dashboard' />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751182586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Go Back' link='/dashboard' />\r\n+      <BackButton text='Go Back' link='/' />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751637363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Go Back' link='/' />\r\n+      <BackButton text=\"Go Back\" link=\"/(main)/(pages)/dashboard\" />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751668980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text=\"Go Back\" link=\"/(main)/(pages)/dashboard\" />\r\n+      <BackButton text=\"Go Back\" link=\"/dashboard\" />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751717000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text=\"Go Back\" link=\"/dashboard\" />\r\n+      <BackButton text='Go Back' link='/' />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751902426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Go Back' link='/' />\r\n+      <BackButton text='Go Back' link='/workflows' />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                },
                {
                    "date": 1745751924415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const PostsPage = () => {\r\n   return (\r\n     <>\r\n-      <BackButton text='Go Back' link='/workflows' />\r\n+      <BackButton text='Go Back' link='/' />\r\n       <PostsTable />\r\n       <PostsPagination />\r\n     </>\r\n   );\r\n"
                }
            ],
            "date": 1745750180987,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport BackButton from '@/components/ui/backbutton';\r\nimport * as z from 'zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Button } from '@/components/ui/button';\r\nimport posts from '@/data/posts';\r\nimport { ToastAction } from \"@/components/ui/toast\"\r\n\r\nconst formSchema = z.object({\r\n  title: z.string().min(1, {\r\n    message: 'Title is required',\r\n  }),\r\n  body: z.string().min(1, {\r\n    message: 'Body is required',\r\n  }),\r\n  author: z.string().min(1, {\r\n    message: 'Author is required',\r\n  }),\r\n  date: z.string().min(1, {\r\n    message: 'Date is required',\r\n  }),\r\n});\r\n\r\ninterface PostEditPageProps {\r\n  params: {\r\n    id: string;\r\n  };\r\n}\r\n\r\nconst PostEditPage = ({ params }: PostEditPageProps) => {\r\n  const { toast } = useToast();\r\n\r\n  const post = posts.find((post) => post.id === params.id);\r\n\r\n  const form = useForm<z.infer<typeof formSchema>>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      title: post?.title || '',\r\n      body: post?.body || '',\r\n      author: post?.author || '',\r\n      date: post?.date || '',\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (data: z.infer<typeof formSchema>) => {\r\n    toast({\r\n      title: 'Post has been updated successfully',\r\n      description: `Updated by ${post?.author} on ${post?.date}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BackButton text='Back To Posts' link='/posts' />\r\n      <h3 className='text-2xl mb-4'>Edit Post</h3>\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(handleSubmit)} className='space-y-8'>\r\n          <FormField\r\n            control={form.control}\r\n            name='title'\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n                  Title\r\n                </FormLabel>\r\n                <FormControl>\r\n                  <Input\r\n                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n                    placeholder='Enter Title'\r\n                    {...field}\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n\r\n          <FormField\r\n            control={form.control}\r\n            name='body'\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n                  Body\r\n                </FormLabel>\r\n                <FormControl>\r\n                  <Textarea\r\n                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n                    placeholder='Enter Body'\r\n                    {...field}\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n\r\n          <FormField\r\n            control={form.control}\r\n            name='author'\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n                  Author\r\n                </FormLabel>\r\n                <FormControl>\r\n                  <Input\r\n                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n                    placeholder='Enter Author'\r\n                    {...field}\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n\r\n          <FormField\r\n            control={form.control}\r\n            name='date'\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel className='uppercase text-xs font-bold text-zinc-500 dark:text-white'>\r\n                  Date\r\n                </FormLabel>\r\n                <FormControl>\r\n                  <Input\r\n                    className='bg-slate-100 dark:bg-slate-500 border-0 focus-visible:ring-0 text-black dark:text-white focus-visible:ring-offset-0'\r\n                    placeholder='Enter Date'\r\n                    {...field}\r\n                  />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n\r\n          <Button className='w-full dark:bg-slate-800 dark:text-white'>\r\n            Update Post\r\n          </Button>\r\n        </form>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEditPage;"
        }
    ]
}